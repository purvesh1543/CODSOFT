import tkinter as tk
from tkinter import messagebox
import json
import os

class ContactBook:
    def __init__(self, root):  # Corrected __init__ method
        self.root = root
        self.root.title("Contact Book")
        self.contacts = self.load_contacts()

        # Name label and entry
        self.name_label = tk.Label(root, text="Name:")
        self.name_label.grid(row=0, column=0, padx=10, pady=10)
        self.name_entry = tk.Entry(root)
        self.name_entry.grid(row=0, column=1, padx=10, pady=10)

        # Phone label and entry
        self.phone_label = tk.Label(root, text="Phone:")
        self.phone_label.grid(row=1, column=0, padx=10, pady=10)
        self.phone_entry = tk.Entry(root)
        self.phone_entry.grid(row=1, column=1, padx=10, pady=10)

        # Add contact button
        self.add_button = tk.Button(root, text="Add Contact", command=self.add_contact)
        self.add_button.grid(row=2, column=0, columnspan=2, pady=10)

        # Contact listbox
        self.contact_listbox = tk.Listbox(root, height=10, width=50)
        self.contact_listbox.grid(row=3, column=0, columnspan=2, padx=10, pady=10)

        # Delete contact button
        self.delete_button = tk.Button(root, text="Delete Contact", command=self.delete_contact)
        self.delete_button.grid(row=4, column=0, columnspan=2, pady=10)

        self.display_contacts()

    def load_contacts(self):
        if os.path.exists("contacts.json"):
            with open("contacts.json", "r") as file:
                return json.load(file)
        return []

    def save_contacts(self):
        with open("contacts.json", "w") as file:
            json.dump(self.contacts, file)

    def add_contact(self):
        name = self.name_entry.get()
        phone = self.phone_entry.get()

        if not name or not phone:
            messagebox.showwarning("Input Error", "Please enter both name and phone number.")
            return

        self.contacts.append({"name": name, "phone": phone})
        self.save_contacts()
        self.display_contacts()

        self.name_entry.delete(0, tk.END)
        self.phone_entry.delete(0, tk.END)

    def display_contacts(self):
        self.contact_listbox.delete(0, tk.END)
        for contact in self.contacts:
            self.contact_listbox.insert(tk.END, f"{contact['name']} - {contact['phone']}")

    def delete_contact(self):
        try:
            selected_index = self.contact_listbox.curselection()[0]
            del self.contacts[selected_index]
            self.save_contacts()
            self.display_contacts()
        except IndexError:
            messagebox.showwarning("Delete Error", "Please select a contact to delete.")

if __name__ == "__main__":  # Corrected main guard
    root = tk.Tk()
    app = ContactBook(root)
    root.mainloop()
